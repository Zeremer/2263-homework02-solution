///*
// * This Java source file was generated by the Gradle 'init' task.
// */
//package edu.isu.cs.cs2263.hw02;
//
//import com.sun.glass.ui.View;
//import edu.isu.cs.cs2263.hw02.App;
//import edu.isu.cs.cs2263.hw02.views.WelcomeView;
//import javafx.scene.control.Button;
//import javafx.scene.input.KeyCode;
//import javafx.scene.input.MouseButton;
//import javafx.stage.Stage;
//import org.junit.jupiter.api.AfterEach;
//import org.junit.jupiter.api.BeforeEach;
//import org.junit.jupiter.api.Test;
//import org.junit.jupiter.api.extension.ExtendWith;
//import org.testfx.api.FxAssert;
//import org.testfx.api.FxRobot;
//import org.testfx.api.FxRobotException;
//import org.testfx.api.FxToolkit;
//import org.testfx.assertions.api.Assertions;
//import org.testfx.framework.junit5.ApplicationExtension;
//import org.testfx.framework.junit5.ApplicationTest;
//import org.testfx.framework.junit5.Start;
//import org.testfx.matcher.control.LabeledMatchers;
//
//import java.util.Map;
//import java.util.concurrent.TimeoutException;
//
//import static org.junit.jupiter.api.Assertions.*;
//
////@ExtendWith(ApplicationExtension.class)
////class AppTest {
//
//
//public class AppTest extends ApplicationTest {
//
//    private final App app = new App();
//
////    @Start
////    private void start(Stage stage) throws Exception {
////        ApplicationTest.launch(App.class);
////        stage.show();
////    }
//
//    @Override
//    public void start(Stage stage) throws Exception {
//        stage.setScene();
//        stage.show();
//        stage.toFront();
//    }
//
////    @Test (expected = FxRobotException.class)
////    public void clickOnNothing() {
////        clickOn("#Nothing");
////    }
////
////    @Test
////    void welcomeTest(FxRobot robot) {
////        Assertions.assertThat(robot.lookup("#WelcomeView").queryAs(View.class)).hasText("Welcome");
////    }
//
//    @Test
//    void CourseViewButtonTest(FxRobot robot) {
//        Assertions.assertThat(robot.lookup(".display").queryButton()).hasText("Display (dept.)");
//    }
////
////    public void start(Stage primaryStage) throws Exception {
////        primaryStage.setTitle("Course View");
////
////        Button display = new Button("Display (dept.)");
////        display.setOnAction(event -> {
////           displayList();
////        });
////        display.setGraphic(FontIcon.of(MaterialDesignF.FORMAT_LIST_TEXT, 20));
////
////        Button newCourse = new Button("New Course");
////        newCourse.setOnAction(event -> {
////            showCourseForm();
////        });
////        newCourse.setGraphic(FontIcon.of(MaterialDesignP.PLAYLIST_PLUS, 20));
////
////        Button exit = new Button("Exit");
////        exit.setOnAction(event -> {
////            exit();
////        });
////        exit.setGraphic(FontIcon.of(MaterialDesignP.POWER, 20));
////
////        depts = new ChoiceBox<>();
////        depts.setOnAction(event -> {
////            int selectedIndex = depts.getSelectionModel().getSelectedIndex();
////            // update the display button
////        });
////        for (int i = 0; i < Course.CODES.length; i++) {
////            depts.getItems().add(String.format("%s (%s)", Course.DEPTS[i], Course.CODES[i]));
////        }
////        depts.getSelectionModel().select(0);
////
////        mainLayout = new BorderPane();
////
////        BorderPane exitPane = new BorderPane();
////        exitPane.setPadding(new Insets(10,10,10,10));
////        exitPane.setRight(exit);
////
////        mainLayout.setBottom(exitPane);
////
////        BorderPane choiceLayout = new BorderPane();
////        choiceLayout.setPadding(new Insets(10,10,10,10));
////        Label deptLbl = new Label("Departments: ");
////        choiceLayout.setLeft(deptLbl);
////        choiceLayout.setCenter(depts);
////        BorderPane.setAlignment(depts, Pos.CENTER_LEFT);
////        BorderPane.setAlignment(deptLbl, Pos.CENTER_RIGHT);
////
////        HBox buttons = new HBox(10, display, newCourse);
////        HBox.setMargin(display, new Insets(10, 0, 10, 10));
////        HBox.setMargin(newCourse, new Insets(10, 10, 10, 0));
////
////        BorderPane topLayout = new BorderPane();
////        topLayout.setCenter(choiceLayout);
////        topLayout.setRight(buttons);
////
////        mainLayout.setTop(topLayout);
////
////        mainLayout.setCenter(currentView.getView());
////
////        scene = new Scene(mainLayout, 600, 300);
////        primaryStage.setScene(scene);
////        FontIcon fi = FontIcon.of(MaterialDesignF.FLASK_EMPTY, 32);
////
////        primaryStage.show();
////    }
////
////    public Vector<Course> getCourses() {
////        return courses;
////    }
////
////    private void setView(String viewName) {
////        mainLayout.getChildren().remove(currentView.getView());
////        currentView = views.get(viewName);
////        mainLayout.setCenter(currentView.getView());
////        mainLayout.requestLayout();
////    }
////
////    public void showCourseForm() {
////        setView("CourseForm");
////        currentView.updateData();
////    }
////
////    public void displayList() {
////        setView("DisplayList");
////        currentView.updateData();
////    }
////
////    public void exit() {
////        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
////        alert.setTitle("Confirmation");
////        alert.setContentText("Are you sure you want to exit?");
////
////        Optional<ButtonType> result = alert.showAndWait();
////        result.ifPresent(btnType -> {
////            if (btnType.getButtonData().isDefaultButton())
////                System.exit(0);
////        });
////    }
////
////    public int getSelectedDepartment() {
////        return depts.getSelectionModel().getSelectedIndex();
////    }
////
////    public void showWelcome() {
////        setView("Welcome");
////    }
////
////    public void addCourse(Course course) {
////        courses.add(course);
////    }
////
////    public static void main(String[] args) {
////        Application.launch(args);
////    }
//}
